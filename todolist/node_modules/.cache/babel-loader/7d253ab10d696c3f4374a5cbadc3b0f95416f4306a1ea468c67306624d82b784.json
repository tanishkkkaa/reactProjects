{"ast":null,"code":"var _jsxFileName = \"/home/taanishikaa/Desktop/react/tut01/src/Content.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = () => {\n  _s();\n  const [items, setItems] = useState([{\n    id: 1,\n    checked: false,\n    item: \"One half pound bag of cocoa covered almonds unsalted\"\n  }, {\n    id: 2,\n    checked: false,\n    item: \"item 2\"\n  }, {\n    id: 3,\n    checked: false,\n    item: \"item 3\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: () => handleCheck(item.id),\n          checked: item.checked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: item.checked ? {\n            textDecoration: 'line-through'\n          } : null,\n          onDoubleClick: () => handleCheck(item.id),\n          children: item.item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(FaTrashAlt, {\n          onClick: () => handleDelete(item.id),\n          role: \"button\",\n          tabIndex: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Content, \"P5QUAIiRXvMnIyOio2dQx0Bi0Dc=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","FaTrashAlt","jsxDEV","_jsxDEV","Content","_s","items","setItems","id","checked","item","children","map","className","type","onChange","handleCheck","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","onDoubleClick","onClick","handleDelete","role","tabIndex","_c","$RefreshReg$"],"sources":["/home/taanishikaa/Desktop/react/tut01/src/Content.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport {FaTrashAlt} from \"react-icons/fa\";\nconst Content = () => {\n    const[items , setItems] = useState([\n        {\n            id:1,\n            checked:false,\n            item:\"One half pound bag of cocoa covered almonds unsalted\",\n        },\n        {\n            id:2,\n            checked:false,\n            item:\"item 2\",\n        },\n        {\n            id:3,\n            checked:false,\n            item:\"item 3\",\n        },\n    ])\n    return(\n        <main>\n           <ul>\n           {items.map((item) => (\n                        <li className=\"item\" key={item.id}>\n                            <input\n                                type=\"checkbox\"\n                                onChange={() => handleCheck(item.id)}\n                                checked={item.checked}\n                            />\n                            <label\n                                style={(item.checked) ? { textDecoration: 'line-through' } : null}\n                                onDoubleClick={() => handleCheck(item.id)}\n                            >{item.item}</label>\n                            <FaTrashAlt\n                                onClick={() => handleDelete(item.id)}\n                                role=\"button\"\n                                tabIndex=\"0\"\n                            />\n                        </li>\n                    ))}\n           </ul>\n        </main>\n    )\n};\n\nexport default Content;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAAQC,UAAU,QAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAK,CAACC,KAAK,EAAGC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAC/B;IACIQ,EAAE,EAAC,CAAC;IACJC,OAAO,EAAC,KAAK;IACbC,IAAI,EAAC;EACT,CAAC,EACD;IACIF,EAAE,EAAC,CAAC;IACJC,OAAO,EAAC,KAAK;IACbC,IAAI,EAAC;EACT,CAAC,EACD;IACIF,EAAE,EAAC,CAAC;IACJC,OAAO,EAAC,KAAK;IACbC,IAAI,EAAC;EACT,CAAC,CACJ,CAAC;EACF,oBACIP,OAAA;IAAAQ,QAAA,eACGR,OAAA;MAAAQ,QAAA,EACCL,KAAK,CAACM,GAAG,CAAEF,IAAI,iBACHP,OAAA;QAAIU,SAAS,EAAC,MAAM;QAAAF,QAAA,gBAChBR,OAAA;UACIW,IAAI,EAAC,UAAU;UACfC,QAAQ,EAAEA,CAAA,KAAMC,WAAW,CAACN,IAAI,CAACF,EAAE,CAAE;UACrCC,OAAO,EAAEC,IAAI,CAACD;QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eACFjB,OAAA;UACIkB,KAAK,EAAGX,IAAI,CAACD,OAAO,GAAI;YAAEa,cAAc,EAAE;UAAe,CAAC,GAAG,IAAK;UAClEC,aAAa,EAAEA,CAAA,KAAMP,WAAW,CAACN,IAAI,CAACF,EAAE,CAAE;UAAAG,QAAA,EAC5CD,IAAI,CAACA;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpBjB,OAAA,CAACF,UAAU;UACPuB,OAAO,EAAEA,CAAA,KAAMC,YAAY,CAACf,IAAI,CAACF,EAAE,CAAE;UACrCkB,IAAI,EAAC,QAAQ;UACbC,QAAQ,EAAC;QAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA,GAdoBV,IAAI,CAACF,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAe7B,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEf,CAAC;AAACf,EAAA,CA1CID,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}